/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'amr' at '9/17/15 11:40 AM' with Gradle 2.2.1
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.2.1/userguide/tutorial_java_projects.html
 */

def SPBOOTVERSION = '1.2.5.RELEASE'
def SPOCKVERSION = '0.7-groovy-2.0'
def GROOVYVERSION = '2.4.4'
def JAXWSVERSION = '2.2.10'

// dependencies used in this script
buildscript{
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE"

    }
}

// plugins
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'spring-boot'

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral();
}

sourceSets{
    main{
        java{
            srcDir "${buildDir}/generated"
        }
        groovy{
            srcDirs = ['src/main/groovy', "${buildDir}/generated"]
        }
    }
    test{
        java{
            srcDir "${buildDir}/generated"
        }
        groovy{
            srcDirs = ['src/test/groovy', "${buildDir}/generated"]
        }

    }

}

// closure config for jar task
jar {
    baseName = 'ws-versioning-poc'
    version = '0.1.0'
}


sourceCompatibility = 1.7
targetCompatibility = 1.7


configurations {
    jaxws
}

task genAPI{
    // Defines input / output
    ext.destDir = file("${buildDir}/generated")
    ext.classesDir = file("${buildDir}/classes")
    ext.wsdlSrc = file('src/main/resources/contract/address-book/address-book.wsdl')

    outputs.dir classesDir

    doLast {
        destDir.mkdirs()
        classesDir.mkdirs()
        project.ant {
            taskdef (name:'genAPI',
            classname: 'com.sun.tools.ws.ant.WsImport',
            classpath: configurations.jaxws.asPath)
            genAPI(keep:true,
            destdir: classesDir,
            sourcedestdir: destDir,
            wsdl:wsdlSrc) //this could be a wsdl url
        }
    }
}

compileJava{
    dependsOn "genAPI"
}
compileGroovy{
    dependsOn "genAPI"
}


// In this section you declare the dependencies for your production and test code
dependencies {
    compile "org.springframework.boot:spring-boot-starter-ws"
    compile "org.codehaus.groovy:groovy:$GROOVYVERSION"
    //groovy "org.codehaus.groovy:groovy-all:$GROOVYVERSION"
    compile "org.slf4j:slf4j-api:1.7.7"

    jaxws "com.sun.xml.ws:jaxws-tools:$JAXWSVERSION"
    compile "wsdl4j:wsdl4j:1.6.1"

    //compile "com.sun.xml.ws:jaxws-tools:$JAXWSVERSION"
    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "org.spockframework:spock-core:$SPOCKVERSION"
    testCompile "org.spockframework:spock-spring:$SPOCKVERSION"

    testCompile "cglib:cglib-nodep:2.2" // For mocking classes
    testCompile "org.objenesis:objenesis:1.2" // For mocking final classes
}

task wrapper(type: Wrapper){
    gradleVersion = '2.2.1'
}
